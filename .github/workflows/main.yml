on:
  push:
    branches:
      - testing-ci-cd

name: Github_Builder

jobs:

  checkout_and_clean:
    runs-on: self-hosted
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
        clean: false
        fetch-depth: 0

    - name: Cleanup
      run: |
        rm -f -r Builds
        
  build:
    runs-on: self-hosted
    needs: checkout_and_clean
    env:
      UNITY_VERSION: 2021.1.0b7
      
    strategy:
      matrix:
        platform: ["WebGL", "StandaloneWindows64"]

    steps:
    
    - name: Unity Build
      run: |
        /Applications/Unity/Hub/Editor/$UNITY_VERSION/Unity.app/Contents/MacOS/Unity -quit -batchmode -nographics -logFile \
          -projectPath ./ -executeMethod BuildConfigsManager.BuildCurrentPlatform -buildTarget ${{matrix.platform}}
    
    - name: Compress Build
      run: |
        rm -f FastFuneral_${{matrix.platform}}.zip
        zip -r -X FastFuneral_${{matrix.platform}}.zip Builds/${{matrix.platform}}
  
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: build-${{ github.run_number }}
        release_name: Fast&Funeral
        body: |
          New Version!
        prerelease: true
        
    - name: Upload Release Asset WebGL
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./FastFuneral_WebGL.zip
        asset_name: FastFuneral_WebGL
        asset_content_type: application/zip
        
    - name: Upload Release Asset Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./FastFuneral_StandaloneWindows64.zip
        asset_name: FastFuneral_Win
        asset_content_type: application/zip
